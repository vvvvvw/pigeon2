<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">

	<display-name>Pigeon Governor</display-name>
	<description />

	<context-param>
    	<param-name>contextConfigLocation</param-name>
	    <param-value>
	    	classpath*:app-context.xml
	        classpath*:config/spring/common/appcontext-*.xml
	        classpath*:config/spring/local/appcontext-*.xml
	    </param-value>
	</context-param>

	<!-- 日志记录 -->
    <context-param>
        <!-- 日志配置文件路径 -->
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <context-param>
        <!-- 日志页面的刷新间隔 -->
        <param-name>log4jRefreshInterval</param-name>
        <param-value>6000</param-value>
    </context-param>
	<listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>
    
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

	<!-- log4j2-begin -->
	<context-param>
	    <param-name>log4jContextName</param-name>
	    <param-value>myApplication</param-value>
	</context-param>
	<context-param>
	    <param-name>log4jConfiguration</param-name>
	    <param-value>classpath:log4j2.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
	</listener>
	<filter>
		<filter-name>log4jServletFilter</filter-name>
		<filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>log4jServletFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
    	<dispatcher>FORWARD</dispatcher>
	    <dispatcher>INCLUDE</dispatcher>
	    <dispatcher>ERROR</dispatcher>
	</filter-mapping>
	<!-- log4j2-end -->
	
	<listener>
    	<listener-class>com.dianping.pigeon.governor.util.MyServletContextListener</listener-class>
    </listener>
    
	<filter>
        <filter-name>NonAuthFilter</filter-name>
        <filter-class>com.dianping.pigeon.governor.filter.NonAuthFilter</filter-class>
        <init-param>
            <param-name>excludes</param-name>
			<!-- First to aviod the sso bug. Later we need to prevent the filter /!-->
            <param-value>/api/,/resources/,/images/,/error,/ssologout,/rocket/,/ruok,/test/</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>NonAuthFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
	<!-- sso -->
	<filter>
	    <filter-name>CAS Authentication Filter</filter-name>
	    <filter-class>org.jasig.cas.client.authentication.Saml11AuthenticationFilter</filter-class>
	    <!-- SSO 登录页面的lion key，不用改写 -->
	    <init-param>
	        <param-name>casServerLoginUrlLionKey</param-name>
	        <param-value>cas-server-webapp.loginUrl</param-value>
	    </init-param>
	    <!-- 此处需要改写param-value，改成接入站点uri的lion key，lion的value必须是应用的完整地址且不带子路径，例如：http://my.dper.com -->
	    <init-param>
	        <param-name>serverNameLionKey</param-name>
	        <param-value>pigeon-governor-server.web.serverName</param-value>
	    </init-param>
	    <!-- 实施安全策略，提升外网访问时的安全级别，没有外网访问的站点不建议打开 -->
	    <!-- <init-param>
	        <param-name>safe</param-name>
	        <param-value>false</param-value>
	    </init-param> -->
	    <!-- 免登录url，支持通配符*，多个用,分隔 -->
	    <init-param>
	        <param-name>excludeURLs</param-name>
	        <!-- sso这里有个天坑，只放get，不放其他请求，如果是api想办法跳过sso -->
	        <param-value></param-value>
	    </init-param>
	    <init-param>
            <param-name>formal</param-name>
            <param-value>false</param-value>
        </init-param>
	</filter>
	
	<filter>
	    <filter-name>CAS Validation Filter</filter-name>
	    <filter-class>org.jasig.cas.client.validation.Saml11TicketValidationFilter</filter-class>
	    <init-param>
	        <param-name>casServerUrlPrefixLionKey</param-name>
	        <param-value>cas-server-webapp.serverName</param-value>
	    </init-param>
	    <!-- 此处需要改写param-value，改成接入站点uri的lion key，lion的value必须是应用的完整地址且不带子路径，例如：http://my.dper.com -->
	    <init-param>
	        <param-name>serverNameLionKey</param-name>
	        <param-value>pigeon-governor-server.web.serverName</param-value>
	    </init-param>
	    <init-param>
	        <param-name>redirectAfterValidation</param-name>
	        <param-value>true</param-value>
	    </init-param>
	    <!-- 是否开启票据时间差验证，默认开启 -->
	    <init-param>
            <param-name>validateLionKey</param-name>
            <param-value>cas-server-webapp.ticket.validate</param-value>
        </init-param>
	    <!-- 最大容忍的时间差（毫秒） -->
	    <init-param>
	        <param-name>tolerance</param-name>
	        <param-value>60000</param-value>
	    </init-param>
	</filter>
	
	<filter>
	  <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
	  <filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
	</filter>
	
	<filter>
	   <filter-name>CAS Single Sign Out Filter</filter-name>
	   <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
	   <init-param>
	       <param-name>artifactParameterName</param-name>
	       <param-value>SAMLart</param-value>
	   </init-param>
	</filter>
	
	<!-- 不要修改 filter-mapping的顺序 -->
	<filter-mapping>
	  <filter-name>CAS Single Sign Out Filter</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
	  <filter-name>CAS Authentication Filter</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
	  <filter-name>CAS Validation Filter</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
	  <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
    	<dispatcher>FORWARD</dispatcher>
	    <dispatcher>INCLUDE</dispatcher>
	</filter-mapping>
	
	<!-- 本机身份验证 -->
	<filter>
		<filter-name>authenticationFilter</filter-name>
		<filter-class>com.dianping.pigeon.governor.filter.AuthenticationFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>authenticationFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<session-config>
		<!-- 12 hours -->
		<session-timeout>720</session-timeout>
	</session-config>
	
	<servlet>
		<servlet-name>rest_servlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>rest_servlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
</web-app>